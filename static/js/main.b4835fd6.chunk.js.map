{"version":3,"sources":["common.blocks/Header/FlyoutMenu/FlyoutMenu.js","common.blocks/Header/Header.js","common.blocks/MovieList/MovieList.js","common.blocks/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["FlyoutMenu","props","HandleFilter","event","target","innerText","setType","className","style","display","open","ref","reference","value","onClick","Header","useState","typedValue","setTypedValue","openFlyout","setOpenFlyout","menuRef","useRef","buttonRef","useEffect","handler","current","contains","document","addEventListener","removeEventListener","setOpen","type","placeholder","onChange","preventDefault","onKeyDown","key","setSearchValue","src","process","alt","MovieList","movies","map","movie","index","Poster","Title","Test","Year","Type","Footer","App","setMovies","searchValue","a","url","fetch","response","json","responseJson","Search","getMovieRequest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4835fd6.chunk.js","sourcesContent":["function FlyoutMenu(props) {\r\n    const HandleFilter = (event) => {\r\n        if (event.target.innerText === \"All\") {\r\n            props.setType(\"\");\r\n        } else {\r\n            props.setType(event.target.innerText);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ul\r\n            className=\"flyout-menu\"\r\n            style={{ display: props.open ? \"block\" : \"none\" }}\r\n            ref={props.reference}\r\n        >\r\n            <li className=\"flyout-menu__item\" value=\"\" onClick={HandleFilter}>\r\n                all\r\n            </li>\r\n            <li className=\"flyout-menu__item\" value=\"movie\" onClick={HandleFilter}>\r\n                movie\r\n            </li>\r\n            <li className=\"flyout-menu__item\" value=\"series\" onClick={HandleFilter}>\r\n                series\r\n            </li>\r\n            <li className=\"flyout-menu__item\" value=\"game\" onClick={HandleFilter}>\r\n                game\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default FlyoutMenu;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport FlyoutMenu from \"./FlyoutMenu/FlyoutMenu.js\";\r\n\r\nconst Header = (props) => {\r\n    const [typedValue, setTypedValue] = useState(\"\");\r\n    const [openFlyout, setOpenFlyout] = useState(false);\r\n    const menuRef = useRef(null);\r\n    const buttonRef = useRef(null);\r\n\r\n\r\n    //This is a click away listener. It will be called when the user clicks away from the menu or the button.\r\n    useEffect(() => {\r\n        let handler = (event) => {\r\n            if (\r\n                !menuRef.current.contains(event.target) &&\r\n                !buttonRef.current.contains(event.target)\r\n            ) {\r\n                setOpenFlyout(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handler);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handler);\r\n        };\r\n    }, [openFlyout]);\r\n\r\n    const handleInput = (event) => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n        setTypedValue(value);\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            props.setSearchValue(typedValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo header_margin\">\r\n                <span className=\"header__title\">OMDb</span>\r\n            </div>\r\n            <div className=\"search header_margin\">\r\n                <button\r\n                    className=\"search__flyout_menu button search_padding\"\r\n                    onClick={() => setOpenFlyout(!openFlyout)}\r\n                    ref={buttonRef}\r\n                >\r\n                    All\r\n                </button>\r\n                <FlyoutMenu\r\n                    open={openFlyout}\r\n                    setOpen={setOpenFlyout}\r\n                    setType={props.setType}\r\n                    reference={menuRef}\r\n                />\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"search, example: Spider-Man\"\r\n                    value={props.value}\r\n                    onChange={handleInput}\r\n                    onKeyDown={handleKeyDown}\r\n                    className=\"search__text search_padding\"\r\n                />\r\n                <button\r\n                    onClick={() => props.setSearchValue(typedValue)}\r\n                    className=\"search__action button search_padding\"\r\n                    type=\"submit\"\r\n                >\r\n                    <img src={process.env.PUBLIC_URL + \"/img/Header/search.png\"} alt=\"\" />\r\n                </button>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","const MovieList = (props) => {\r\n    return (\r\n        <section className=\"movielist\">\r\n            <div className=\"movielist__wrapper\">\r\n                {props.movies.map((movie, index) => (\r\n                    <div className=\"movie\" key={index}>\r\n                        <div className=\"movie__wrapper\">\r\n                            <div className=\"movie__poster\">\r\n                                <img className=\"movie__img\" src={movie.Poster} alt={movie.Title} />\r\n                            </div>\r\n                            <div className=\"movie__info\">\r\n                                {props.Test}\r\n                                <span className=\"movie__title\">{movie.Title}</span>\r\n                                <div className=\"movie__details\">\r\n                                    <span className=\"movie__year\">{movie.Year}</span>\r\n                                    <span className=\"movie__type\">{movie.Type}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MovieList;\r\n","function Footer () {\r\n    return(\r\n    <footer>\r\n        <p>Some fake copyrights</p>\r\n        <p>All rights reserved</p>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from \"react\";\n\nimport \"./normalize.css\";\nimport \"./App.sass\";\n\nimport Header from \"./common.blocks/Header/Header\";\nimport MovieList from \"./common.blocks/MovieList/MovieList\";\nimport Footer from \"./common.blocks/Footer/Footer\";\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"Spider-man\");\n    const [type, setType] = useState(\"\");\n\n    useEffect(() => {\n        const getMovieRequest = async (searchValue) => {\n            const url = `http://www.omdbapi.com/?s=${searchValue}&type=${type}&apikey=68fec587`;\n            const response = await fetch(url);\n            const responseJson = await response.json();\n\n            if (responseJson.Search) {\n                setMovies(responseJson.Search);\n            }\n        };\n        getMovieRequest(searchValue, type);\n    }, [searchValue, type]);\n\n    return (\n        <div className=\"wrapper\">\n            <Header\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n                type={type}\n                setType={setType}\n            />\n            <MovieList movies={movies} />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}